<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Python基础语法]]></title>
    <url>%2F2018%2F11%2F14%2FPython%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[输入输出 print()函数 input()函数 在Python中，获取键盘输入的数据的方法是采用 input 函数，例如： 12name = input("请输入名字:")print("hello",name) 注释Python中的注释有单行注释和多行注释 单行注释 Python中单行注释以 # 开头，#右边的所有东西当做说明，而不是真正要执行的程序，起辅助说明作用 123#我是注释，可以在里写一些功能说明之类的东西print('hello world') 多行注释 单引号（’’’） 双引号（”””） 1234567'''这是多行注释，用三个引号这是多行注释，用三个引号 这是多行注释，用三个引号这里可以写很多很多行的功能说明''' 变量1234num1=1num2=2num3=num1+num2print(num3) 在python中，只要给变量赋了值，那么它的类型就已经确定了。也就是说我们不需要声明变量的类型。 怎样查看一个变量的类型呢?可以使用内置函数type()，来查看变量的类型 1234name="song"age=21print("name的类型:",type(name))print("age的类型:",type(age)) 数据类型 Number（数字） int long float complex bool（布尔） True False String（字符串） List（列表） Tuple（元组） Set（集合） Dictionary（字典） 1. String (字符串) 字符串是以单引号’或双引号”括起来的任意字符比如’abc’，”xyz”等等 切片 12345678910str = '0123456789'print(str[2]) #截取第三个字符print(str[-1]) #截取倒数第一个字符print(str[:]) #截取字符串的全部字符print(str[0:3]) #截取第一位到第三位的字符print(str[6:]) #截取第七个字符到结尾print(str[:-3]) #截取从头开始到倒数第三个字符之前print(str[::-1]) #创造一个与原字符串顺序相反的字符串print(str[-3:-1]) #截取倒数第三位与倒数第一位之前的字符print(str[-3:]) #截取倒数第三位到结尾 其他操作 方法 作用 str.count(‘x’) 查找某个字符在字符串里面出现的次数 str.find(‘x’) 查找指定字符并返回对应下标，不存在则返回-1 str.replace(oldstr, newstr) 字符串替换 str.join() 在字符串后面插入指定字符串 str.lower() 转化小写字母 str.upper() 转化为大写字母 2. List（列表）什么是列表？列表是最常用的Python数据类型之一，是一种有序的集合。它和C语言的数组有些类似,不同的是python中列表的数据项不需要具有相同的类型形如： 12list_1 = [1, 2, 3, 4, 5, 6, 7 ]list_2 = ['python', 'ATD', 2018, 3.14] 方法 作用 list.append(obj) 在列表末尾添加新的对象 list.count(obj) 统计某个元素在列表中出现的次数 list.extend(seq) 在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表） list.index(obj) 从列表中找出某个值第一个匹配项的索引位置 list.insert(index, obj) 将对象插入列表 list.pop([index=-1]) 移除列表中的一个元素（默认最后一个元素），并且返回该元素的值 list.remove(obj) 移除列表中某个值的第一个匹配项 list.reverse() 反向列表中元素 list.clear() 清空列表 类型转化chr()返回x对应的字符，如chr(65)返回‘A’ ord()返回字符对应的ASC码数字编号，如ord(‘A’),返回65 判断语句1. if..else.. 1234567age = 3if age &gt;= 18: print('your age is', age) print('adult')else: print('your age is', age) print('teenager') 2. if..elif.. 1234567age = 3if age &gt;= 18: print('adult')elif age &gt;= 6: print('teenager')else: print('kid') 循环语句1. for循环 Python中 for循环可以遍历任何序列,比如字符串、列表等 123names = ['Python', 'ATD', 'Study']for name in names: print(name,end=" ") Python中提供一个range()函数，可以生成一个整数序列，所以我们一般使用range()函数和for循环搭配使用 12345#计算1~100的整数之和sum = 0for x in range(101): sum = sum + xprint("1~100整数之和为:%d"%sum) 2. while循环 123456#计算1~100的整数之和i , sum = 1 , 0while i&lt;=100: sum = sum + i i += 1print("1~100整数之和为:%d"%sum) 小游戏1234567891011121314import randomplayer = input('请输入：剪刀(0) 石头(1) 布(2):\n')player = int(player)computer = random.randint(0,2)print('player=%d,computer=%d'%(player,computer),end="\n\n------------------------\n\n")if ((player == 0) and (computer == 2)) or ((player ==1) and (computer == 0)) or ((player == 2) and (computer == 1)): print('获胜，哈哈，你太厉害了')elif player == computer: print('平局，要不再来一局')else: print('输了，不要走，决战到天亮')]]></content>
  </entry>
  <entry>
    <title><![CDATA[Python简介]]></title>
    <url>%2F2018%2F11%2F13%2Fpython%E7%AE%80%E4%BB%8B%2F</url>
    <content type="text"><![CDATA[起源Guido von Rossum(吉多·范罗苏姆)，荷兰人Guido从阿姆斯特丹大学获得了数学和计算机硕士学位。他可以说是一位数学家，但他更加享受计算机带来的乐趣。在接触过许多编程语言后，Guido希望有一种语言，这种语言能够像C语言那样，能够全面调用计算机的功能接口，又可以像shell那样，可以轻松的编程。1989年圣诞节期间，在阿姆斯特丹。Guido为了打发圣诞节的无趣，决心开发一个新的脚本解释程序，做为ABC 语言的一种继承，python因此诞生。 特点 简单、易于学习Python 是一门代码风格简约的语言,它能够让我们专注于解决问题的方案，而不是语言本身，Python 是一门非常容易入门的语言。 自由且开放Python 是 FLOSS （自由/开放源代码软件）的成员之一。简单来说，我们可以自由地分享这一软件的拷贝，阅读它的源代码，并对其作出改动，或是将其的一部分运用于一款新的自由程序中。这正是 Python 为何能如此优秀的一大原因——它由一群希望看到 Python 能变得更好的社区成员所创造，并持续改进至今。 高级语言当我们在用 Python 编写程序时，我们不必考虑诸如我们的程序应当如何使用内存等底层细节。 跨平台性由于其开放源码的特性，Python 已被移植到其它诸多平台（意即它们已经过改动以保证其能正常工作）。如果我们小心地避开了所有系统依赖型的特性。我们所有的 Python 程序可以在其中任何一个平台上工作，不必作出任何改动。 解释性在我们使用诸如 C 或 C++ 等编译语言编写程序时，需要将这些语言的源代码通过编译程序配合其中不同的标记（Flags）与选项，来将它们转换成我们电脑所能识别的语言（例如 0 与 1 构成的二进制码）。 面向对象Python 同时支持面向过程编程与面向对象编程。在 面向过程 的编程语言中，程序是由仅仅带有可重用特性的子程序与函数所构建起来的。在 面向对象 的编程语言中，程序是由结合了数据与功能的对象所构建起来的。与 C++ 或 Java 这些语言相比，Python 具有其特别的、功能强大又简单的方式来实现面向对象编程。 可扩展性如果我们需要代码的某一重要部分能够快速地运行，或希望算法的某些部分不被公开，我们可以在 C 或 C++ 语言中编写这些程序，然后再将其运用于我们的 Python 程序中。 可嵌入性我们可以在我们的 C 或 C++ 程序中嵌入 Python代码，从而提供脚本功能。 丰富的库实际上 Python 标准库的规模非常庞大。它能够帮助完成完成很多事情，包括正则表达式、文档生成、单元测试、多线程、数据库、网页浏览器、CGI、FTP、邮件、XML、XML-RPC、HTML、WAV 文件、密码系统、GUI（图形用户界面），以及其它系统依赖型的活动。 Python 简洁、灵活、通用，几乎可以在各种场景与各种平台、设备、语言进行连接，因此常常被称为胶水语言。完成同一个任务，可能C语言要写1000行代码，Java只需要写100行，而Python可能只要20行那么有人会说，既然python这么厉害，那我们为什么还要学习其他语言呢，我们要知道，存在即合理，每个语言都有他的优缺点。 缺点 速度慢 由于Python是解释型语言，你的代码在执行时会一行一行地翻译成CPU能理解的机器码，这个翻译过程非常耗时，所以很慢，所以它的速度会比C、C++上不少，但是不影响使用。现在的硬件配置相对以前来说都是比较高的，所以基本上没有太大的影响，除非是一些实时性比较强的程序可能会受到一些影响，但是也有解决办法，可以嵌入C程序。 强制缩进 如果我们有其他语言的编程经验，例如：C语言或者Java语言，那么Python的强制缩进一开始会让我们很不习惯。但是如果我们习惯了Python的缩进语法，反倒会觉得这种代码风格非常的优雅。 Python当然也不是万能的，也有不能做的事情,比如： 操作系统，用C语言编写 手机应用，用Objective-C（针对iPhone）和Java（针对Android）。 应用 用Python可以做什么？ 可以做日常任务，比如自动备份的MP3、图片 可以做网络游戏的后台，很多在线游戏的后台都是用Python开发的。还有网络应用，包括网站、后台服务，许多大型网站也是用Python开发的，例如豆瓣、知乎、YouTube、Gmail邮箱等 相对于其他语言来说Python拥有：非常完善的基础代码库，覆盖了网络、文件、GUI、数据库、文本等大量内容等。许多功能不必从零编写，直接使用现成的即可。当然我们也可以写一些完善的程序插件供其他人使用！ python应用场景: 自动化运维、web开发、应用开发、大数据、数据挖掘、科学计算、机器学习、人工智能、自然语言处理包括文本处理、电子邮件、密码系统、GUI（图形用户界面）、数据分析、机器学习等等]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scrapy 之安装教程]]></title>
    <url>%2F2018%2F08%2F25%2FScrapy-%E4%B9%8B%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[Scrapy 是一个功能十分强大的爬虫框架，用于抓取web站点并从页面中提取结构化的数据。Scrapy用途广泛，本篇教程主要是介绍在python3X中安装的方法及注意事项，就不对scrapy做详细描述了。Scrapy作为一个优秀的爬虫框架，本身是基于一些库文件进行开发的，由于Scrapy这种高级的特性，这就注定了它需要依赖许多其他的库文件。所以在安装scrapy框架之前，首先要确定安装了它所依赖的环境。(我最开始安装scrapy时并不知道这些，结果各种花式报错，让我一脸懵逼) 基本的依赖环境： wheellxmlTwistedpyOpenSSLPyWin32 注意： 安装依赖库之前先确定一下自己的python版本号和操作系统位数。 由于python3X版本比较多,请根据自己对应的版本下载库文件 python2请勿略本以下内容，可以直接安装scrapy 其实通过Anaconda方式安装python 就不会出现这么多问题了 如果安装过程中出现报错提示说pip版本太低，先升级pip：python -m pip install --upgrade pip 1.安装wheel 直接命令行输入1pip3 install wheel 如果没有任何报错，则说明安装成功，如果出现以下内容1Requirement already satisfied： 则说明早就已经安装好了 如果出现报错，比如提示缺少 libxml2 库等信息，可以采用 wheel 方式安装。移步以下链接：https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml 下载对应的 wheel 文 件，找到与自己的 Python 版本和系统对应的 lxml 版本例如 Windows 64 位、Python 3.7，就选择 lxml‑4.2.4‑cp37‑cp37m‑win_amd64.whl ，将其下载到本地然后命令行切换到.whl文件所在的目录，执行以下命令：1pip3 install lxml‑4.2.4‑cp37‑cp37m‑win_amd64.whl 2.安装Twisted 安装Twisted和之前的wheel安装方试大同小异，注意一定要选择相对应的版本下载https://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted 然后命令行切换到文件所在路径，执行命令：1pip3 install Twisted‑18.7.0‑cp37‑cp37m‑win_amd64.whl 不想命令行切换路径的话，可以使用绝对路径，形如：1pip3 install C:\Users\song\Downloads\Twisted-18.7.0-cp37-cp37m-win_amd64.whl 3.安装pyOpenSSL 直接在官网下载 pyOpenSSL-18.0.0-py2.py3-none-any.whl 文件https://pypi.org/project/pyOpenSSL/#downloads 然后命令行切换到文件所在路径，执行命令：1pip3 install pyOpenSSL-18.0.0-py2.py3-none-any.whl 4.安装pywin32 首先还是找到对应版本下载，然后直接运行.exe文件安装就好了https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/ 安装相应的库文件后应该就可以安装scrapy框架了，执行命令：1pip install scrapy 测试一下：1scrapy -h 安装完成之后 就可以愉快的开始第一个爬虫项目了：1scrapy startproject firstscrapy 值得注意的是，在运行爬虫的时候发现又报错了，形如：1234File”c:\users\name\appdata\locall\programs\python37\lib\site-packages\twisted\conch\manhole.py”, line 12,in from twisted.conch import manhole, telnetdef write(self, data, async=false): File”c:\users\name\appdata\locall\programs\python37\lib\site-packages\twisted\conch\manhole.py”, line 154 def write(self, data, async=false): 出现原因： 这是由于python3.7中将async设为关键字，而不能作为变量名使用 解决方案： 根据报错提示进入manhole.py将async全改成async1就阔以了 直接安装python3.6亦可 如果安装过程还遇到其他问题，可以参考以下链接：https://www.jb51.net/article/128885.htmhttps://blog.csdn.net/qy20115549/article/details/52528896#%E5%AE%89%E8%A3%85pywin32https://docs.scrapy.org/en/latest/intro/install.html#intro-install-platform-notes]]></content>
      <categories>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sublime Text 之常用快捷键]]></title>
    <url>%2F2018%2F08%2F22%2FSublime-Text-%E4%B9%8B%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%2F</url>
    <content type="text"><![CDATA[Sublime Text简介：Sublime Text是一款跨平台代码编辑器（Code Editor）， 具有华丽的用户界面和强大的功能是由程序员Jon Skinner于2008年1月份所开发出来，它最初被设计为一个具有丰富扩展功能的Vim从最初的Sublime Text 1.0，到现在的Sublime Text 3.0，Sublime Text从一个不知名的编辑器演变到现在几乎是各平台首选的GUI编辑器 工欲善其事，必先利其器下面是一些比较常用的快捷键 快捷键列表（Shortcuts Cheatsheet）通用（General） ↑↓←→：上下左右移动光标 Alt： 调出菜单 Ctrl + Shift + P： 调出命令板（Command Palette） Ctrl + `：调出控制台 编辑（Editing） Ctrl + Enter： 在当前行下面新增一行然后跳至该行 Ctrl + Shift + Enter：在当前行上面增加一行并跳至该行 Ctrl + ←/→：进行逐词移动 Ctrl + Shift + ←/→：进行逐词选择 Ctrl + ↑/↓：移动当前显示区域 Ctrl + Shift + ↑/↓： 移动当前行 选择（Selecting） Ctrl + D：选择当前光标所在的词并高亮该词所有出现的位置，再次 Ctrl + D 选择该词出现的下一个位置，在多重选词的过程中，使用 Ctrl + K 进行跳过，使用 Ctrl + U 进行回退，使用 Esc 退出多重编辑 Ctrl + Shift + L：将当前选中区域打散 Ctrl + J：把当前选中区域合并为一行 Ctrl + M：在起始括号和结尾括号间切换 Ctrl + Shift + M：快速选择括号间的内容 Ctrl + Shift + J：快速选择同缩进的内容 Ctrl + Shift + Space：快速选择当前作用域（Scope）的内容 查找&amp;替换（Finding&amp;Replacing） F3：跳至当前关键字下一个位置 Shift + F3：跳到当前关键字上一个位置 Alt + F3：选中当前关键字出现的所有位置 Ctrl + F/H：进行标准查找/替换，之后： Alt + C：切换大小写敏感（Case-sensitive）模式 Alt + W：切换整字匹配（Whole matching）模式 Alt + R：切换正则匹配（Regex matching）模式 Ctrl + Shift + H：替换当前关键字 Ctrl + Alt + Enter：替换所有关键字匹配 Ctrl + Shift + F：多文件搜索&amp;替换 跳转（Jumping） Ctrl + P：跳转到指定文件，输入文件名后可以： @ 符号跳转：输入 @symbol 跳转到 symbol 符号所在的位置 # 关键字跳转：输入 #keyword 跳转到 keyword 所在的位置 : 行号跳转：输入 :12 跳转到文件的第12行。 Ctrl + R：跳转到指定符号 Ctrl + G：跳转到指定行号 屏幕（Screen） F11：切换普通全屏 Shift + F11：切换无干扰全屏 Alt + Shift + 2：进行左右分屏 Alt + Shift + 8：进行上下分屏 Alt + Shift + 5：进行上下左右分屏 分屏之后，使用 Ctrl + 数字键 跳转到指定屏，使用 Ctrl + &gt;Shift + 数字键 将当前屏移动到指定屏 附表（精华版） Ctrl+Shift+P：打开命令面板 Ctrl+P：搜索项目中的文件 Ctrl+G：跳转到第几行 Ctrl+W：关闭当前打开文件 Ctrl+Shift+W：关闭所有打开文件 Ctrl+Shift+V：粘贴并格式化 Ctrl+D：选择单词，重复可增加选择下一个相同的单词 Ctrl+L：选择行，重复可依次增加选择下一行 Ctrl+Shift+L：选择多行 Ctrl+Shift+Enter：在当前行前插入新行 Ctrl+X：删除当前行 Ctrl+M：跳转到对应括号 Ctrl+U：软撤销，撤销光标位置 Ctrl+J：选择标签内容 Ctrl+F：查找内容 Ctrl+Shift+F：查找并替换 Ctrl+H：替换 Ctrl+R：前往 method Ctrl+N：新建窗口 Ctrl+K+B：开关侧栏 Ctrl+Shift+M：选中当前括号内容，重复可选着括号本身 Ctrl+F2：设置/删除标记 Ctrl+/：注释当前行 Ctrl+Shift+/：当前位置插入注释 Ctrl+Alt+/：块注释，并Focus到首行，写注释说明用的 Ctrl+Shift+A：选择当前标签前后，修改标签用的 F11：全屏 Shift+F11：全屏免打扰模式，只编辑当前文件 Alt+F3：选择所有相同的词 Alt+.：闭合标签 Alt+Shift+数字：分屏显示 Alt+数字：切换打开第N个文件 Shift+右键拖动：光标多步，用来更改或插入列内容 按Ctrl，依次点击或选取，可需要编辑的多个位置 按Ctrl+Shift+上下键，可替换行]]></content>
      <categories>
        <category>sublime</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[markdown基本语法]]></title>
    <url>%2F2018%2F08%2F16%2Fmarkdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的 HTML 标记语言来说，Markdown 可谓是十分轻量的。 一、标题在想要设置为标题的文字前面加#来表示一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。 注：标准语法一般在#后跟个空格再写文字 示例: 123456# 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题 效果如下: 这是一级标题这是二级标题这是三级标题这是四级标题这是五级标题这是六级标题二、段落加粗 要加粗的文字左右分别用两个*号包起来 斜体 要倾斜的文字左右分别用一个*号包起来 斜体加粗 要倾斜和加粗的文字左右分别用三个*号包起来 删除线 要加删除线的文字左右分别用两个~~号包起来 示例: 1234**这是加粗的文字***这是倾斜的文字*`***这是斜体加粗的文字***~~这是加删除线的文字~~ 效果如下: 这是加粗的文字这是倾斜的文字这是斜体加粗的文字这是加删除线的文字 三、引用在引用的文字前加&gt;即可。引用也可以嵌套，可以加两个及以上 示例: 123&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容 这是引用的内容 这是引用的内容 这是引用的内容 这是引用的内容 四、分割线分割线可以用三个或者三个以上的 - 或者 * 来表示 示例: 1234-------******* 效果如下: 可以看到 显示效果是一样的 五、列表无序列表无序列表使用星号、加号或是减号作为列表标记 示例: 123- 列表内容+ 列表内容* 列表内容 注意：- + * 跟内容之间都要有一个空格 效果如下: 列表内容 列表内容 列表内容 有序列表有序列表则使用数字接着一个英文句点 1231. 列表内容2. 列表内容3. 列表内容 注意：序号跟内容之间要有空格 列表内容 列表内容 列表内容 列表嵌套上一级和下一级之间敲三个空格即可 123456789- 一级无序列表内容 * 二级无序列表内容 + 二级无序列表内容 - 二级无序列表内容+ 一级无序列表内容 1. 二级有序列表内容 2. 二级有序列表内容 3. 二级有序列表内容 一级无序列表内容 二级无序列表内容 二级无序列表内容 二级无序列表内容 一级无序列表内容 二级有序列表内容 二级有序列表内容 二级有序列表内容 六、链接语法: 1[超链接名](超链接地址 &quot;超链接title&quot;) 注意:12链接title可加可不加图片的话在链接前加 ! 示例: 12[百度](http://baidu.com )[菜鸟教程](http://www.runoob.com/) 效果如下: 百度菜鸟教程 七、代码单行代码代码之间分别用一个反引号包起来 示例: 1` echo &quot;hello word!!!&quot; ` 效果如下: echo &quot;hello word!!!&quot; 代码块代码块用三个反引号包起来 八、表格语法: 表格用减号、冒号、竖线组合来绘制减号用来分割表头和内容竖线用来分割字段 文字默认居左减号两边加冒号 表示文字居中减号右边加冒号 表示文字居右 示例 1234表头|表头|表头--- | :--: | ---:内容 | 内容 | 内容内容 | 内容 | 内容 注意: 123第二行分割表头和内容减号有一个就行，为了对齐，多加了几个原生的语法两边都要用 | 包起来 效果如下: 表头 表头 表头 内容 内容 内容 内容 内容 内容 其他反斜杠Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 标签），你可以在星号的前面加上反斜杠： 1\*literal asterisks\* Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号： 123456789101112\ 反斜线` 反引号* 星号_ 底线&#123;&#125; 花括号[] 方括号() 括弧# 井字号+ 加号- 减号. 英文句点! 惊叹号 自动链接Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如： 1&lt;http://runoob.com/&gt; Markdown 会转为：1&lt;a href=&quot;http://runoob.com/&quot;&gt;http://runoob.com/&lt;/a&gt; 效果如下:http://runoob.com/]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>语言</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[song]]></title>
    <url>%2F2018%2F08%2F15%2Fsong%2F</url>
    <content type="text"><![CDATA[或许是不知梦的缘故流离之人追逐幻影]]></content>
      <categories>
        <category>song</category>
      </categories>
      <tags>
        <tag>song</tag>
      </tags>
  </entry>
</search>
